		IPath ecorePath = new Path(parameter.getModelPath());
		
		IFile file = GenmodelLocator.lookup(ecorePath);
		
		if (file == null) {
			ResourceSet resourceSet = new TargetPlatformResourceSet();
			Resource resource = null;
			IPath genmodelPath = ecorePath.removeFileExtension().addFileExtension("genmodel");
			genmodelPath = new Path(parameter.getPluginName()).append(genmodelPath.removeFirstSegments(1));
			URI genmodelURI = URI.createPlatformPluginURI(genmodelPath.toString(), false);

			try {
				// see if a created genmodel exists
				resource = resourceSet.getResource(genmodelURI, true);
			} catch (Exception e1) {
				// create it
				IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(parameter.getPluginName());
				if (!project.exists())
					project.create(null);
				if (!project.isOpen())
					project.open(null);

				URI ecoreURI = URI.createPlatformResourceURI(ecorePath.toString(), false);
				importer = EmdeEcoreImporterHelper.createEcoreImporter(genmodelPath.removeLastSegments(1), ecoreURI, parameter);
			}
			genmodelURI = URI.createPlatformResourceURI(genmodelPath.toString(), false);
			((HashMap<String, URI>) ctx.getValue(FcoreBuilderConstants.GENMODEL_URIS)).put(parameter.getModelPath(), genmodelURI);
		} else {
			URI uri = URI.createPlatformResourceURI(file.getFullPath().toString(), false);
			((HashMap<String, URI>) ctx.getValue(FcoreBuilderConstants.GENMODEL_URIS)).put(parameter.getModelPath(), uri);
		}
